name: Deploy Main branch

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - .github/
      - .git**
    types:
      - closed

jobs:
  build:
    # run only if successfully merged
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    services: # PostgreSQL set-up
      # Docker image pull & setting
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: eighteen
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432 # maps port
    steps:
      # github에서 fetch해옴
      - uses: actions/checkout@v4.2.2

      - name: Gradle 캐싱
        uses: actions/cache@v4.1.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: JDK 17 설치
        uses: actions/setup-java@v4.5.0
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: application-**.yml 생성
        shell: bash
        run: |
          mkdir -p src/main/resources
          cd src/main/resources
          touch ./application-dev.yml
          touch ./application-secret.yml
          
          echo "${{ secrets.APPLICATION_DEV_YML }}" >> ./application-dev.yml
          echo "${{ secrets.APPLICATION_SECRET_YML }}" >> ./application-secret.yml

      - name: Grant execute permission for gradlew
        # 경로 확인 후 권한 부여
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -i

      - name: Zip project files
        run: zip -r ./$GITHUB_SHA.zip . # 프로젝트 전체 파일 압축

      # github secret을 이용해 AWS 설정
      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ secrets.S3_BUCKET_NAME }}/${{ secrets.S3_BUCKET_DIR_NAME }}/$GITHUB_SHA.zip

      - name: Deploy to EC2 with CodeDeploy
        run: aws deploy create-deployment
          --application-name woorydeploy
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name dev
          --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=${{ secrets.S3_BUCKET_DIR_NAME }}/$GITHUB_SHA.zip


