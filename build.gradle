plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sparta.spring-cloud.exercise'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    set('springCloudVersion', "2024.0.0")
    set('querydslVersion', "5.0.0")  // QueryDSL 버전 명시적으로 설정
}

repositories {
    mavenCentral()
}

dependencies {
    // ✅ QueryDSL
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // ✅ JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // ✅ Lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ✅ Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // ✅ PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'
    // ✅ H2
    runtimeOnly 'com.h2database:h2'

    // ✅ JWT
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'

    // ✅ JSON
    implementation 'org.json:json:20230227'

    // ✅ Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // ✅ Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def querydslSrcDir = 'src/main/generated'
clean {
    delete file(querydslSrcDir)
}

tasks.named('test') {
    useJUnitPlatform()
}
